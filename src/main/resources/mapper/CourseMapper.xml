<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmu.cms.mapper.CourseMapper">
    <resultMap id="CourseResultMap" type="com.xmu.cms.entity.Course">
        <id property="courseId" column="courseId" javaType="java.math.BigInteger"/>
        <result property="courseName" column="courseName"/>
        <result property="introduction" column="introduction"/>
        <result property="presentationWeight" column="presentationWeight"/>
        <result property="reportWeight" column="reportWeight"/>
        <result property="questionWeight" column="questionWeight"/>
        <result property="teamStartTime" column="teamStartDate"/>
        <result property="teamEndTime" column="teamEndDate"/>
        <association property="teacher" javaType="com.xmu.cms.entity.Teacher">
            <id property="teacherId" column="teacherId"/>
            <result property="name" column="teacherName"/>
            <result property="email" column="teacherEmail"/>
        </association>
        <association property="teamMainCourse" javaType="com.xmu.cms.entity.Course">
            <id property="courseId" column="teamMainCourseId"/>
            <result property="courseName" column="teamMainCourseName"/>
        </association>
        <association property="seminarMainCourse" javaType="com.xmu.cms.entity.Course">
            <id property="courseId" column="seminarMainCourseId"/>
            <result property="courseName" column="seminarMainCourseName"/>
        </association>
        <collection property="klasses" javaType="com.xmu.cms.entity.Klass">
            <id property="klassId" column="klassId"/>
            <result property="grade" column="grade"/>
            <result property="klassSerial" column="klassSerial"/>
        </collection>
    </resultMap>

    <select id="getAllCourseByTeacherId" resultMap="CourseResultMap">
        SELECT course.id               as courseId,
               course.course_name             as courseName,
               course.introduction,
               course.presentation_percentage as presentationWeight,
               course.report_percentage       as reportWeight,
               course.question_percentage     as questionWeight,
               course.team_start_time         as teamStartDate,
               course.team_end_time           as teamEndDate,
               klass.id                as klassId,
               klass.grade             as grade,
               klass.klass_serial      as klassSerial,
               course1.id              as teamMainCourseId,
               course1.course_name     as teamMainCourseName,
               course2.id              as seminarMainCourseId,
               course2.course_name     as seminarMainCourseName
        FROM course,
             teacher,
             klass,
             course course1,
             course course2
        WHERE teacher.id = #{teacherId}
          AND teacher.id = course.teacher_id
          and klass.course_id = course.id
          and course1.id = course.team_main_course_id
          and course2.id = course.seminar_main_course_id
    </select>

    <select id="getAllCourseByStudentId" resultType="com.xmu.cms.entity.Course">
        SELECT course.id               as courseId,
               teacher.id              as teacherId,
               teacher.email           as teacherEmail,
               teacher.teacher_name    as teacherName,
               course.course_name             as courseName,
               course.introduction,
               course.presentation_percentage as presentationWeight,
               course.report_percentage       as reportWeight,
               course.question_percentage     as questionWeight,
               course. team_start_time         as teamStartDate,
               course.team_end_time           as teamEndDate,
               klass.id                as klassId,
               klass.grade             as grade,
               klass.klass_serial      as klassSerial,
               course1.id              as teamMainCourseId,
               course1.course_name     as teamMainCourseName,
               course2.id              as seminarMainCourseId,
               course2.course_name     as seminarMainCourseName
        FROM course,
             teacher,
             klass,
             klass_student,
             course course1,
             course course2
        WHERE klass_student.student_id = #{studentId}
          AND klass_student.klass_id = klass.id
          AND klass.course_id = course.id
          AND course.teacher_id = teacher.id
          and course1.id = course.team_main_course_id
          and course2.id = course.seminar_main_course_id
    </select>

    <select id="getCourseById" resultMap="CourseResultMap">
        SELECT course.id               as courseId,
               teacher.id              as teacherId,
               teacher.email           as teacherEmail,
               teacher.teacher_name    as teacherName,
               course.course_name             as courseName,
               course.introduction,
               course.presentation_percentage as presentationWeight,
               course.report_percentage       as reportWeight,
               course.question_percentage     as questionWeight,
               course.team_start_time         as teamStartDate,
               course.team_end_time           as teamEndDate,
               klass.id                as klassId,
               klass.grade             as grade,
               klass.klass_serial      as klassSerial,
               course1.id              as teamMainCourseId,
               course1.course_name     as teamMainCourseName,
               course2.id              as seminarMainCourseId,
               course2.course_name     as seminarMainCourseName
        FROM course,
             teacher,
             klass,
             course course1,
             course course2
        WHERE course.id = #{courseId}
          AND teacher.id = course.teacher_id
          and klass.course_id = course.id
          and course1.id = course.team_main_course_id
          and course2.id = course.seminar_main_course_id
    </select>

    <delete id="deleteCourseById">
        DELETE *
        FROM course
        WHERE id = #{courseId}
    </delete>

    <insert id="createCourse" parameterType="com.xmu.cms.entity.Course">
        insert into course (id,
                            teacher_id,
                            course_name,
                            introduction,
                            presentation_percentage,
                            report_percentage,
                            question_percentage,
                            team_start_time,
                            team_end_time)
        values (#{course.courseId},
                #{course.teacher.teacherId},
                #{course.courseName},
                #{course.introduction},
                #{course.presentationWeight},
                #{course.reportWeight},
                #{course.questionWeight},
                #{course.teamStartDate},
                #{course.teamEndDate})
    </insert>

    <select id="getMainShareCourseByTeacher" resultMap="CourseResultMap">
        SELECT course1.id                      as courseId,
               course1.course_name             as courseName,
               course1.introduction,
               course1.presentation_percentage as presentationWeight,
               course1.report_percentage       as reportWeight,
               course1.question_percentage     as questionWeight,
               course1.team_start_time         as teamStartDate,
               course1.team_end_time           as teamEndDate
        FROM course course1,
             course course2
        WHERE course1.teacher_id = #{teacherId}
          and (course2.team_main_course_id = course1.id or course2.seminar_main_course_id = course1.id)
    </select>

    <select id="getSubShareCourseByTeacher" resultMap="CourseResultMap">
        SELECT course.id                      as courseId,
               course.course_name             as courseName,
               course.introduction,
               course.presentation_percentage as presentationWeight,
               course.report_percentage       as reportWeight,
               course.question_percentage     as questionWeight,
               course.team_start_time         as teamStartDate,
               course.team_end_time           as teamEndDate
        FROM course
        WHERE course.teacher_id = #{teacherId}
          and (course.seminar_main_course_id is not null or course.team_main_course_id is not null)
    </select>
    
    <update id="updateCourseTeamMainCourse" parameterType="com.xmu.cms.entity.Course">
        update course
        set team_main_course_id = #{course.teamMainCourse.courseId}
        where id = #{course.courseId}
    </update>

    <update id="updateCourseSeminarMainCourse" parameterType="com.xmu.cms.entity.Course">
        update course
        set seminar_main_course_id = #{course.seminarMainCourse.courseId}
        where id = #{course.courseId}
    </update>

    <select id="getCourseByTeamId" resultMap="CourseResultMap">
        SELECT course.id               as courseId,
               course.course_name             as courseName,
               course.introduction,
               course.presentation_percentage as presentationWeight,
               course.report_percentage       as reportWeight,
               course.question_percentage     as questionWeight,
               course.team_start_time         as teamStartDate,
               course.team_end_time           as teamEndDate,
               klass.id                as klassId,
               klass.grade             as grade,
               klass.klass_serial      as klassSerial,
               course1.id              as teamMainCourseId,
               course1.course_name     as teamMainCourseName,
               course2.id              as seminarMainCourseId,
               course2.course_name     as seminarMainCourseName
        FROM course,
             teacher,
             klass,
             course course1,
             course course2,
             team
        WHERE team.id = #{teamId}
          and course.id = team.course_id
          AND teacher.id = course.teacher_id
          and klass.course_id = course.id
          and course1.id = course.team_main_course_id
          and course2.id = course.seminar_main_course_id
    </select>

    <select id="getTeamMainCourse" resultMap="CourseResultMap">
        SELECT course.id               as courseId,
               course.course_name             as courseName,
               course.introduction,
               course.presentation_percentage as presentationWeight,
               course.report_percentage       as reportWeight,
               course.question_percentage     as questionWeight,
               course.team_start_time         as teamStartDate,
               course.team_end_time           as teamEndDate,
               klass.id                as klassId,
               klass.grade             as grade,
               klass.klass_serial      as klassSerial,
               course1.id              as teamMainCourseId,
               course1.course_name     as teamMainCourseName,
               course2.id              as seminarMainCourseId,
               course2.course_name     as seminarMainCourseName
        FROM course,
             teacher,
             klass,
             course course1,
             course course2,
             course course3
        WHERE course3.id = #{courseId}
          and course.id = course3.team_main_course_id
          AND teacher.id = course.teacher_id
          and klass.course_id = course.id
          and course1.id = course.team_main_course_id
          and course2.id = course.seminar_main_course_id
    </select>
</mapper>