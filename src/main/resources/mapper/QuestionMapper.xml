<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmu.cms.mapper.QuestionMapper">
    <resultMap id="QuestionResultMap" type="com.xmu.cms.entity.Question">
        <id property="questionId" column="questionId" javaType="java.math.BigInteger"/>
        <result property="score" column="score"/>
        <result property="selected" column="is_selected"/>
        <association property="klassSeminar" javaType="com.xmu.cms.entity.KlassSeminar">
            <id property="klassSeminarId" column="klassSeminarId"/>
        </association>
        <association property="student" javaType="com.xmu.cms.entity.Student">
            <id property="studentId" column="studentId"/>
            <result property="name" column="studentName"/>
        </association>
        <association property="team" javaType="com.xmu.cms.entity.Team">
            <id property="teamId" column="teamId"/>
            <result property="teamName" column="teamName"/>
        </association>
        <association property="attendance" javaType="com.xmu.cms.entity.Attendance">
            <id property="attendanceId" column="attendanceId"/>
        </association>
    </resultMap>

    <select id="getQuestionByQuestionId" resultMap="QuestionResultMap">
        select question.id          as questionId,
               score,
               is_selected,
               student.id           as studentId,
               student.student_name as studentName,
               team.id              as teamId,
               team.team_name       as teamName,
               attendance.id        as attendanceId,
               klass_seminar.id     as klassSeminarId
        from student,
             question,
             team,
             attendance,
             klass_seminar
        where question.id = #{questionId}
          and question.team_id = team.id
          and question.student_id = student.id
          and question.klass_seminar_id = klass_seminar.id
    </select>

    <insert id="insertQuestion" parameterType="com.xmu.cms.entity.Question">
        insert question (klass_seminar_id, attendance_id, team_id, student_id, is_selected, score)
        values (#{question.klassSeminar.klassSeminarId},
        #{question.attendance.attendanceId},
        #{question.team.teamId},
        #{question.student.studentId},
        #{question.selected},
        #{question.score})
        <selectKey keyProperty="question.questionId" order="AFTER" resultType="java.math.BigInteger">
            select last_insert_id()
        </selectKey>
    </insert>

    <delete id="deleteQuestion">
        delete
        from question
        where id = #{questionId}
    </delete>

    <!--<update id="selectQuestionByQuestionId">-->
    <!--update question-->
    <!--set is_selected = 1-->
    <!--where id = #{questionId}-->
    <!--</update>-->

    <update id="setScore" parameterType="com.xmu.cms.entity.Question">
        update question
        set score = #{question.score}
        where id = #{question.questionId}
    </update>

    <select id="getQuestionInKlassSeminar" resultMap="QuestionResultMap">
        select question.id          as questionId,
               score,
               is_selected,
               student.id           as studentId,
               student.student_name as studentName,
               team.id              as teamId,
               team.team_name       as teamName,
               attendance.id        as attendanceId
        from student,
             question,
             team,
             attendance
        where question.klass_seminar_id = #{klassSeminarId}
          and question.team_id = team.id
          and question.student_id = student.id
    </select>

    <select id="getNoSelectedQuestionInKlassSeminar" resultMap="QuestionResultMap">
        select question.id          as questionId,
               score,
               student.id           as studentId,
               student.student_name as studentName,
               team.id              as teamId,
               team.team_name       as teamName,
               attendance.id        as attendanceId
        from student,
             question,
             team,
             attendance
        where question.klass_seminar_id = #{klassSeminarId}
          and question.is_selected = 0
          and question.team_id = team.id
          and question.student_id = student.id
    </select>

    <update id="scoreQuestion" parameterType="com.xmu.cms.entity.Question">
        update question
        set score = #{question.score}
        where id = #{question.questionId}
    </update>

    <update id="selectQuestion" parameterType="com.xmu.cms.entity.Question">
        update question
        set is_selected = true
        where id = #{question.questionId}
    </update>

    <select id="getQuestionByKlassSeminarAndStudent" resultMap="QuestionResultMap">
        select question.id          as questionId,
               score,
               student.id           as studentId,
               student.student_name as studentName,
               team.id              as teamId,
               team.team_name       as teamName
        from question,
             team,
             student
        where question.klass_seminar_id = #{klassSeminarId}
          and question.student_id = #{studentId}
          and question.team_id = team.id
          and question.student_id = student.id
    </select>

    <select id="getAttendanceQuestionInKlassSeminar" resultMap="QuestionResultMap">
        select question.id          as questionId,
               score,
               is_selected,
               student.id           as studentId,
               student.student_name as studentName,
               team.id              as teamId,
               team.team_name       as teamName,
               attendance.id        as attendanceId,
               klass_seminar.id     as klassSeminarId
        from student,
             question,
             team,
             attendance,
             klass_seminar
        where attendance.klass_seminar_id = #{klassSeminarId}
          and attendance.is_present = 1
          and question.klass_seminar_id = #{klassSeminarId}
          and question.attendance_id = attendance.id
          and question.team_id = team.id
          and question.student_id = student.id
    </select>

    <select id="getQuestion" resultMap="QuestionResultMap">
        select question.id               as questionId,
               score,
               is_selected,
               question.klass_seminar_id as klassSeminarId,
               student.id                as studentId,
               student.student_name      as studentName,
               team.id                   as teamId,
               team.team_name            as teamName
        from question,
             team,
             student
        where question.id = #{questionId}
          and question.team_id = team.id
          and question.student_id = student.id
    </select>

    <select id="getQuestionByAttendanceAndStudent" resultMap="QuestionResultMap">
        select question.id               as questionId,
               score,
               is_selected,
               question.klass_seminar_id as klassSeminarId,
               team.id                   as teamId,
               team.team_name            as teamName
        from question,
             team
        where question.attendance_id = #{attendanceId}
          and question.student_id = #{studentId}
          and question.team_id = team.id
    </select>
</mapper>